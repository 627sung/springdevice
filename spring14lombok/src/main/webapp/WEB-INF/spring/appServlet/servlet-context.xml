<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.kh.spring14lombok" />
	
	<!-- 
		주소 자동 완성 도구 등록
		 - 매번 /WEB-INF/views/ooo.jsp 적기 귀찮으니 자동완성
		 - view resolver라는 도구를 등록(스프링에서 제공)
	 -->
	 <beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
	 	<beans:property name="prefix" value="/WEB-INF/views/"></beans:property>
	 	<beans:property name="suffix" value=".jsp"></beans:property>
	 </beans:bean>
	 
	 <!-- 
	 	정적 자원은 DispatcherServlet이 처리하면 안된다
	 	- 있는 그대로 사전 처리 없이 접근하도록 해야함
	 	- lovation은 실제 위치를 작성
	 	- mapping은 접근할 주소를 작성
	 	- **은 하위 모든 내용을 의미
	  -->
	  <resources location="/resources/" mapping="/res/**"></resources>
	
	<!-- 
		데이터베이스 도구를 등록
		 - 연결 도구 : 
		 	org.springframework.jdbc.datasource.DriverManagerDataSource
		 	org.apache.commons.dbcp2.BasicDataSource
		 - 명령 도구
	 -->
	<beans:bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName" value="oracle.jdbc.OracleDriver"></beans:property>
		<beans:property name="url" value="jdbc:oracle:thin:@localhost:1521:xe"></beans:property>
		<beans:property name="username" value="c##kh"></beans:property>
		<beans:property name="password" value="c##kh"></beans:property>
	</beans:bean>
	
	
	<beans:bean id="dbcpSource" class="org.apache.commons.dbcp2.BasicDataSource">
		<beans:property name="driverClassName" value="oracle.jdbc.OracleDriver"></beans:property>
		<beans:property name="url" value="jdbc:oracle:thin:@localhost:1521:xe"></beans:property>
		<beans:property name="username" value="c##kh"></beans:property>
		<beans:property name="password" value="c##kh"></beans:property>
		
		<beans:property name="maxTotal" value="20"></beans:property>
		<beans:property name="maxIdle" value="10"></beans:property>
		<beans:property name="maxWaitMillis" value="3000"></beans:property>
	</beans:bean>
	
	<beans:bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<!-- DI(Dependency Injection) : 필요한 도구를 주입시키는 것 -->
		<beans:property name="dataSource" ref="dataSource"></beans:property>
	</beans:bean>
	
	<!--
	 myBatis를 이용하기 위한 도구 등록
	-sqlSessionTemplate :  구문 실행을 위한 템플릿을 제공하는 도구(양식)
	-sqlSession : 실제로 SQL 구문을 실행시키는 도구 
	 -->
	 <beans:bean id="sqlSession" class="org.mybatis.spring.SqlSessionFactoryBean">
	 	<!-- 연결을 위한 도구를 참조 설정 -->
	 	<beans:property name="dataSource" ref="dbcpSource"></beans:property>
	 	<!-- myBatis 설정파일의 위치를 설정 -->
	 	<beans:property name="configLocation" value="classpath:/mybatis/mybatis-config.xml"></beans:property>
	 	<!-- 실제 실행할 명령 파일 위치를 설정  -->
	 	<beans:property name="mapperLocations" value="classpath:/mybatis/**/*-mapper.xml"></beans:property>	 	
	</beans:bean>
	 	
	<beans:bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
	  	<!-- myBatis 실행 도구에 대한 참조 설정 -->
	  	<beans:constructor-arg index="0" ref="sqlSession"></beans:constructor-arg>
	</beans:bean> 
	
	<!-- 
		파일 업로드를 처리하는 도구
		(multipart/form-data 요청을 처리하는 도구)
		
		(주의) 아이디는 무조건 multipartResolver라고 지어야 한다
	 -->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="defaultEncoding" value="UTF-8"></beans:property>
		<beans:property name="maxUploadSize" value="10000000"></beans:property>
		<beans:property name="maxUploadSizePerFile" value="5000000"></beans:property>
	</beans:bean>
	
</beans:beans>
